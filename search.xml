<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建HDP集群报OPEN SSL问题解决方法</title>
      <link href="/2019/03/27/open-ssl-bao-cuo/"/>
      <url>/2019/03/27/open-ssl-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>报错：</p><pre class=" language-shell"><code class="language-shell">ERROR 2015-09-23 09:47:07,402 NetUtil.py:77 - [Errno 8] _ssl.c:492: EOF occurred in violation of protocolERROR 2015-09-23 09:47:07,402 NetUtil.py:78 - SSLError: Failed to connect. Please check openssl library versions.Refer to: https://bugzilla.redhat.com/show_bug.cgi?id=1022468 for more details.WARNING 2015-09-23 09:47:07,402 NetUtil.py:105 - Server at https://test.org:8440is not reachable, sleeping for 10 seconds...WARNING 2015-09-23 09:47:07,402 NetUtil.py:105 - Server at https://test.org:8440is not reachable, sleeping for 10 seconds...INFO 2015-09-23 09:47:14,746 main.py:74 - loglevel=logging.INFOINFO 2015-09-23 09:47:14,746 main.py:74 - loglevel=logging.INFOINFO 2015-09-23 09:47:17,403 NetUtil.py:59 - Connecting to https://test.org:8440/caWARNING 2015-09-23 09:47:17,404 NetUtil.py:82 - Failed to connect to https://test.org:8440/ca due to [Errno 111] Connection refusedWARNING 2015-09-23 09:47:17,404 NetUtil.py:105 - Server at https://test.org:8440is not reachable, sleeping for 10 seconds...WARNING 2015-09-23 09:47:17,404 NetUtil.py:105 - Server at https://test.org:8440is not reachable, sleeping for 10 seconds...ERROR 2015-09-23 09:47:19,780 main.py:315 - Fatal exception occurred:</code></pre><p>解决方法：</p><pre class=" language-shell"><code class="language-shell">vim /etc/ambari-agent/conf/ambari-agent.ini在[security]下添加force_https_protocol=PROTOCOL_TLSv1_2</code></pre><pre class=" language-shell"><code class="language-shell">vi /etc/python/cert-verification.cfg 在[https] 下添加verify=disable</code></pre><p>然后在Ambari界面点击retry进行重试操作</p>]]></content>
      
      
      <categories>
          
          <category> Hadoop问题总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDFS WEB UI上缺少datanode的问题解决方法</title>
      <link href="/2019/03/19/web-ui-shang-que-shao-datanode/"/>
      <url>/2019/03/19/web-ui-shang-que-shao-datanode/</url>
      
        <content type="html"><![CDATA[<h2 id="1、集群结构"><a href="#1、集群结构" class="headerlink" title="1、集群结构"></a>1、集群结构</h2><pre class=" language-sh"><code class="language-sh">192.168.0.60 host0192.168.0.61 host1192.168.0.62 host2192.168.0.63 host3192.168.0.64 host4</code></pre><h2 id="2、问题状况"><a href="#2、问题状况" class="headerlink" title="2、问题状况"></a>2、问题状况</h2><pre class=" language-sh"><code class="language-sh">#HDFS上显示存活的datanode个数为4个#HDFS WEB UI上显示的datanode个数为三个#缺少host4节点的datanode</code></pre><h2 id="3、问题解决思路"><a href="#3、问题解决思路" class="headerlink" title="3、问题解决思路"></a>3、问题解决思路</h2><pre class=" language-sh"><code class="language-sh">1、检查namenode与host4是否可以ping通2、如果不可以ping通，检查host4上的hosts文件，以及网络文件配置3、如果可以ping通，则检查host4当前的ip地址，有可能在免密配置完成后，重启主机，ip发生变化，此时192.168.168.0.64的地址仍然可以ping通，但是服务却不能连接，因此会导致在WEB UI上无法显示datanode，只需要修改网络配置文件，设置为静态IP即可，然后重启network。4、停止Hadoop所有服务，然后重启Hadoop集群，即可在WEB UI上查看到host4的datanode信息。</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hadoop问题总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SM学习总结</title>
      <link href="/2019/03/19/sm-wen-ti-zong-jie/"/>
      <url>/2019/03/19/sm-wen-ti-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="SM学习总结"><a href="#SM学习总结" class="headerlink" title="SM学习总结"></a>SM学习总结</h1><h2 id="基本环境参数"><a href="#基本环境参数" class="headerlink" title="基本环境参数"></a>基本环境参数</h2><p>Splice.olap.shuffle.partitions=1200</p><p>Dsplice.spark.yarn.executor.memoryOverhead=6144</p><p>Dsplice.spark.executor.memory=10g</p><p>splice.olap_server.external=true</p><p>splice.olap_server.memory=20480</p><p>HBASE_HEAPSIZE=20480</p><p>splice.splitBlockSize=32108864</p><h2 id="1、设置splice-olap-shuffle-partitions"><a href="#1、设置splice-olap-shuffle-partitions" class="headerlink" title="1、设置splice.olap.shuffle.partitions"></a>1、设置splice.olap.shuffle.partitions</h2><p>在 hbase的 custom hbase-site中添加splice.olap.shuffle.partitions=400，400数值可进行修改，400是一个相对稳妥的数值，该参数影响在<strong>shuffle</strong>过程中分区的个数，从而影响<strong>task</strong>的数量，如下是在测试10G数据时设置400和1200的参数运行效果：</p><p>​                                        <strong>10G结果对比</strong></p><table><thead><tr><th style="text-align:center">比较内容</th><th style="text-align:center">400</th><th style="text-align:center">1200</th></tr></thead><tbody><tr><td style="text-align:center">Split</td><td style="text-align:center"><strong>381s</strong></td><td style="text-align:center"><strong>343s</strong></td></tr><tr><td style="text-align:center">Minor compaction</td><td style="text-align:center">0s</td><td style="text-align:center">0s</td></tr><tr><td style="text-align:center">Major compaction</td><td style="text-align:center">0s</td><td style="text-align:center">0s</td></tr><tr><td style="text-align:center">闭链</td><td style="text-align:center"><strong>365s</strong></td><td style="text-align:center"><strong>325s</strong></td></tr><tr><td style="text-align:center">Minor compaction</td><td style="text-align:center">152s(24个)</td><td style="text-align:center">0s</td></tr><tr><td style="text-align:center">Major compaction</td><td style="text-align:center">0s</td><td style="text-align:center">0s</td></tr><tr><td style="text-align:center">开链</td><td style="text-align:center"><strong>105s</strong></td><td style="text-align:center"><strong>131s</strong></td></tr><tr><td style="text-align:center">Minor compaction</td><td style="text-align:center">0s</td><td style="text-align:center">0s</td></tr><tr><td style="text-align:center">Major compaction</td><td style="text-align:center">0s</td><td style="text-align:center">0s</td></tr><tr><td style="text-align:center">总计</td><td style="text-align:center"><strong>851s</strong></td><td style="text-align:center"><strong>793s</strong></td></tr></tbody></table><p>​                                        <strong>10G测试结果</strong></p><table><thead><tr><th style="text-align:center">比较内容</th><th style="text-align:center">SM2.7.0.1907 partitions=400</th><th style="text-align:center">SM2.7.0.1907 partitions=600</th><th style="text-align:center">SM2.7.0.1907 partitions=1200</th></tr></thead><tbody><tr><td style="text-align:center">SPLIT</td><td style="text-align:center">123.986s</td><td style="text-align:center">109.756s</td><td style="text-align:center">109.925s</td></tr><tr><td style="text-align:center">闭链</td><td style="text-align:center">64.074s</td><td style="text-align:center">54.260s</td><td style="text-align:center">53.399s</td></tr><tr><td style="text-align:center">开链</td><td style="text-align:center">57.084s</td><td style="text-align:center">55.067s</td><td style="text-align:center">55.086s</td></tr><tr><td style="text-align:center">总计</td><td style="text-align:center">245.126s</td><td style="text-align:center">219.083s</td><td style="text-align:center">218.41s</td></tr></tbody></table><p>适量的设置该参数可以提升运行速度，但是过度设置splice.olap.shuffle.partitions参数不会减少运行时间反而会增加运行时间，所以该参数需要多次尝试修改，并且针对不同的数据量设置的大小也会不一样。</p><h2 id="2、创建表的字段类型选择问题"><a href="#2、创建表的字段类型选择问题" class="headerlink" title="2、创建表的字段类型选择问题"></a>2、创建表的字段类型选择问题</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> T_TELLER_ROLES_EXT_0214<span class="token punctuation">(</span>    ID            <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    STAFF_ID     <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    ROLE_ID        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>尽量避免使用VARCHAR() 类型，在进行字段的比较时速度较慢。</p><p><strong>目前还使用的VARCHAR()类型，下一步尝试使用数字类型。</strong></p><h2 id="3、修改splice-splitBlockSize"><a href="#3、修改splice-splitBlockSize" class="headerlink" title="3、修改splice.splitBlockSize"></a>3、修改splice.splitBlockSize</h2><p>该参数影响使用多少个task从磁盘中读取数据，默认是<strong>67108864</strong>，可设置为<strong>32108864</strong>，具体大小还需要针对不同的运行情况，建议不要修改。</p><h2 id="4、insert-语句的编写"><a href="#4、insert-语句的编写" class="headerlink" title="4、insert 语句的编写"></a>4、insert 语句的编写</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#第一种</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> T_TELLER_ROLES_ADD <span class="token comment" spellcheck="true">--splice-properties bulkImportDirectory='/data/poc/HIS', useSpark=true, skipSampling=false</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> T_TELLER_ROLES_EXT_0215 <span class="token keyword">EXCEPT</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> T_TELLER_ROLES_EXT_0214<span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#第二种</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> T_TELLER_ROLES_ADD <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> T_TELLER_ROLES_EXT_0215 <span class="token keyword">EXCEPT</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> T_TELLER_ROLES_EXT_0214<span class="token punctuation">;</span></code></pre><p>第一种是使用SM <strong>bulk load</strong>的方式向表中插入数据，参数bulkImportDirectory指的是SM有读写权限的文件夹，用于保存运行日志，其余参数可在官方文档中有详细解释。</p><h2 id="5、Error-resin-resin-U"><a href="#5、Error-resin-resin-U" class="headerlink" title="5、Error resin resin.U"></a>5、Error resin resin.U</h2><p>这个问题指的是资源使用已满，需要重启HBase，这个目前算是个<strong>BUG</strong>，在<strong>1905</strong>版本以后修复了。</p><h2 id="6、查询不到表的BUG"><a href="#6、查询不到表的BUG" class="headerlink" title="6、查询不到表的BUG"></a>6、查询不到表的BUG</h2><p>在创建表后，使用 show tables 无法查询到表的信息，但是可以对表进行操作，这个问题是系统缓存的问题，重启shell客户端，重新进行创建表即可。</p><h2 id="7、官网参数的修改"><a href="#7、官网参数的修改" class="headerlink" title="7、官网参数的修改"></a>7、官网参数的修改</h2><p><strong>官网参数为：</strong></p><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">数值</th></tr></thead><tbody><tr><td style="text-align:center">hbase.hstore.defaultengine.compactor</td><td style="text-align:center">com.splicemachine.compactions.SpliceDefaultCompactor</td></tr><tr><td style="text-align:center">hbase.hstore.defaultengine.compactionpolicy</td><td style="text-align:center">com.splicemachine.compactions.SpliceDefaultCompactionPolicy</td></tr></tbody></table><p><strong>修改后：</strong></p><table><thead><tr><th style="text-align:center">参数名称</th><th style="text-align:center">数值</th></tr></thead><tbody><tr><td style="text-align:center">hbase.hstore.defaultengine.compactor<strong>.class</strong></td><td style="text-align:center">com.splicemachine.compactions.SpliceDefaultCompactor</td></tr><tr><td style="text-align:center">hbase.hstore.defaultengine.compactionpolicy<strong>.class</strong></td><td style="text-align:center">com.splicemachine.compactions.SpliceDefaultCompactionPolicy</td></tr></tbody></table><h2 id="8、如下参数谨慎设置"><a href="#8、如下参数谨慎设置" class="headerlink" title="8、如下参数谨慎设置"></a>8、如下参数谨慎设置</h2><p>hbase.hstore.compaction.max.size设置为Long.MAX_VALUE，设置完之后SM服务会无法启动，所以该参数<strong>不要修改</strong>变动。</p><h2 id="9、HBase自身的问题"><a href="#9、HBase自身的问题" class="headerlink" title="9、HBase自身的问题"></a>9、HBase自身的问题</h2><p><strong>错误一：</strong>So there may be a TCP socket connection left open in CLOSE_WAIT state. For more details check <a href="https://issues.apache.org/jira/browse/HBASE-9393" target="_blank" rel="noopener">https://issues.apache.org/jira/browse/HBASE-9393</a><br>后面的URL指向这个问题的解决方式</p><h2 id="10、Hmaster与regionserver"><a href="#10、Hmaster与regionserver" class="headerlink" title="10、Hmaster与regionserver"></a>10、Hmaster与regionserver</h2><p>配置集群时，Hmaster与regionserver服务不要放在同一节点上，splice服务要与regionserver放在同一节点上。</p><h2 id="11、删除表后，在hbase中不会删除，而是会在原来表的位置打标记。"><a href="#11、删除表后，在hbase中不会删除，而是会在原来表的位置打标记。" class="headerlink" title="11、删除表后，在hbase中不会删除，而是会在原来表的位置打标记。"></a>11、删除表后，在hbase中不会删除，而是会在原来表的位置打标记。</h2><p>运行CALL SYSCS_UTIL.VACUUM();删除已经被删除的表</p><p>详细介绍：<a href="https://doc.splicemachine.com/sqlref_sysprocs_vacuum.html" target="_blank" rel="noopener">https://doc.splicemachine.com/sqlref_sysprocs_vacuum.html</a></p><p>在删除一张表并且重新创建一张与原来相同表名的表需要在创建表之前执行该命令。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">Drop</span> <span class="token keyword">table</span> A<span class="token punctuation">;</span><span class="token keyword">CALL</span> SYSCS_UTIL<span class="token punctuation">.</span>VACUUM<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">Create</span> <span class="token keyword">table</span> A<span class="token punctuation">;</span></code></pre><h2 id="12、增加spark的执行内存"><a href="#12、增加spark的执行内存" class="headerlink" title="12、增加spark的执行内存"></a>12、增加spark的执行内存</h2><pre class=" language-shell"><code class="language-shell">Job aborted due to stage failure: Task 15 in stage 181.0 failed 4 times, most recent failure: Lost task 15.3 in stage 181.0 (TID 3633, master, executor 361): ExecutorLostFailure (executor 361 exited caused by one of the running tasks) Reason: Container killed by YARN for exceeding memory limits. 14.3 GB of 14 GB physical memory used. Consider boosting spark.yarn.executor.memoryOverhead.Driver stacktrace:</code></pre><p>当出现以上问题时，需要修改如下参数：</p><p>Dsplice.spark.yarn.executor.memoryOverhead=6144</p><p>Dsplice.spark.executor.memory=10g。</p><h2 id="13、修改HBASE-HEAPSIZE"><a href="#13、修改HBASE-HEAPSIZE" class="headerlink" title="13、修改HBASE_HEAPSIZE"></a>13、修改HBASE_HEAPSIZE</h2><p>官网建议将splice.olap_server.memory的大小设置和HMaster heap size的大小相同。</p><h2 id="14、其他优化参数"><a href="#14、其他优化参数" class="headerlink" title="14、其他优化参数"></a>14、其他优化参数</h2><h2 id="15、向Splice导入数据时注意事项"><a href="#15、向Splice导入数据时注意事项" class="headerlink" title="15、向Splice导入数据时注意事项"></a>15、向Splice导入数据时注意事项</h2><p>例：<strong>在所有导入数据的方法中</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">call</span> SYSCS_UTIL<span class="token punctuation">.</span>BULK_IMPORT_HFILE <span class="token punctuation">(</span>    schemaName<span class="token punctuation">,</span>    tableName<span class="token punctuation">,</span>    insertColumnList <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    fileName<span class="token punctuation">,</span>    columnDelimiter <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    characterDelimiter <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    timestampFormat <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    dateFormat <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    timeFormat <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    maxBadRecords<span class="token punctuation">,</span>    badRecordDirectory <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    oneLineRecords <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">charset</span> <span class="token operator">|</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    bulkImportDirectory<span class="token punctuation">,</span>    skipSampling<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>bulkImportDirectory</strong>一定要将数据放在<strong>除一级目录</strong>之外的次级目录中，如/data/14g.csv或/data/poc/14g.csv等</p><p>在使用<strong>BULK_IMPORT_HFILE</strong>方法时需要修改如下参数：</p><pre class=" language-shell"><code class="language-shell">yarn.nodemanager.pmem-check-enabled=falseyarn.nodemanager.vmem-check-enabled=false</code></pre><h2 id="16、磁盘管理"><a href="#16、磁盘管理" class="headerlink" title="16、磁盘管理"></a>16、磁盘管理</h2><p>当磁盘空间到达阀值时，yarn会拒绝启动，默认阀值为90%，建议不要修改。</p><h2 id="17、Splice其他参数"><a href="#17、Splice其他参数" class="headerlink" title="17、Splice其他参数"></a>17、Splice其他参数</h2><h2 id="18、查询优化"><a href="#18、查询优化" class="headerlink" title="18、查询优化"></a>18、查询优化</h2>]]></content>
      
      
      <categories>
          
          <category> Splice Machine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Splice Machine </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yarn Register DNS 端口占用</title>
      <link href="/2019/01/29/yarn-register-dns/"/>
      <url>/2019/01/29/yarn-register-dns/</url>
      
        <content type="html"><![CDATA[<p>如果在安装时看到与YARN Registry DNS Bind Port相关的错误。可以参考以下步骤操作：</p><h2 id="1、打开Ambari管理界面并进入YARN管理界面"><a href="#1、打开Ambari管理界面并进入YARN管理界面" class="headerlink" title="1、打开Ambari管理界面并进入YARN管理界面"></a>1、打开Ambari管理界面并进入YARN管理界面</h2><p><img src="/images/yarn-register-dns1.png" alt="Alt text"></p><h2 id="2、点击CONFIGS，进入配置界面"><a href="#2、点击CONFIGS，进入配置界面" class="headerlink" title="2、点击CONFIGS，进入配置界面"></a>2、点击CONFIGS，进入配置界面</h2><p><img src="/images/yarn-register-dns2.png" alt="Alt text"></p><h2 id="3、点击ADVANCED进入高级设置中修改DNS端口号"><a href="#3、点击ADVANCED进入高级设置中修改DNS端口号" class="headerlink" title="3、点击ADVANCED进入高级设置中修改DNS端口号"></a>3、点击ADVANCED进入高级设置中修改DNS端口号</h2><p><img src="/images/yarn-register-dns3.png" alt="Alt text"></p><p><strong>将53修改成其他不被占用的端口即可</strong></p><h2 id="4、重启集群，YARN正常启动"><a href="#4、重启集群，YARN正常启动" class="headerlink" title="4、重启集群，YARN正常启动"></a>4、重启集群，YARN正常启动</h2><p>参考文献：<a href="https://community.hortonworks.com/articles/225841/yarn-registry-dns-port-conflict-issue.html" target="_blank" rel="noopener">Hortonworks</a></p>]]></content>
      
      
      <categories>
          
          <category> HDP安装报错 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDP安装——基础环境配置</title>
      <link href="/2019/01/29/hdp-an-zhuang-ji-chu-pei-zhi/"/>
      <url>/2019/01/29/hdp-an-zhuang-ji-chu-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载安装包"><a href="#一、下载安装包" class="headerlink" title="一、下载安装包"></a>一、下载安装包</h2><p><strong>注：安装centos7时，安装英文版，避免环境安装时报错</strong></p><table><thead><tr><th style="text-align:left"><strong>ambari</strong></th><th><strong><a href="http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.3.0/ambari-2.7.3.0-centos7.tar.gz" target="_blank" rel="noopener">http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.3.0/ambari-2.7.3.0-centos7.tar.gz</a></strong></th></tr></thead><tbody><tr><td style="text-align:left"><strong>HDP</strong></td><td><strong><a href="http://public-repo-1.hortonworks.com/HDP/centos7/3.x/updates/3.1.0.0/HDP-3.1.0.0-centos7-rpm.tar.gz" target="_blank" rel="noopener">http://public-repo-1.hortonworks.com/HDP/centos7/3.x/updates/3.1.0.0/HDP-3.1.0.0-centos7-rpm.tar.gz</a></strong></td></tr><tr><td style="text-align:left"><strong>HDP-UTILS</strong></td><td><strong><a href="http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7/HDP-UTILS-1.1.0.22-centos7.tar.gz" target="_blank" rel="noopener">http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7/HDP-UTILS-1.1.0.22-centos7.tar.gz</a></strong></td></tr><tr><td style="text-align:left"><strong>HDP-GPL</strong></td><td><strong><a href="http://public-repo-1.hortonworks.com/HDP-GPL/centos7/3.x/updates/3.1.0.0/HDP-GPL-3.1.0.0-centos7-gpl.tar.gz" target="_blank" rel="noopener">http://public-repo-1.hortonworks.com/HDP-GPL/centos7/3.x/updates/3.1.0.0/HDP-GPL-3.1.0.0-centos7-gpl.tar.gz</a></strong></td></tr></tbody></table><hr><h2 id="二、系统环境配置"><a href="#二、系统环境配置" class="headerlink" title="二、系统环境配置"></a>二、系统环境配置</h2><p><strong>所有操作都是root用户</strong></p><h3 id="1、修改主机名"><a href="#1、修改主机名" class="headerlink" title="1、修改主机名"></a>1、修改主机名</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上vim /etc/hostname</code></pre><pre class=" language-shell"><code class="language-shell">master01 #主机名称</code></pre><h3 id="2、修改网络"><a href="#2、修改网络" class="headerlink" title="2、修改网络"></a>2、修改网络</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上vim /etc/sysconfig/network-scripts/ifcfg-enp0s31f6 #ifcfg-enp0s31f6 为网卡名称</code></pre><pre class=" language-shell"><code class="language-shell">BOOTPROTO="static"          # 使用静态IP地址，默认为dhcpIPADDR="192.168.0.80"       # 设置的静态IP地址NETMASK="255.255.255.0"     # 子网掩码GATEWAY="192.168.0.1"       # 网关地址DNS1="8.8.8.8"               # DNS服务器ONBOOT="yes"                 #是否开机启用</code></pre><h3 id="3、配置hosts文件"><a href="#3、配置hosts文件" class="headerlink" title="3、配置hosts文件"></a>3、配置hosts文件</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上vi /etc/hosts</code></pre><pre class=" language-shell"><code class="language-shell">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.0.80 master01192.168.0.81 node01192.168.0.82 node02</code></pre><h3 id="4、关闭防火墙"><a href="#4、关闭防火墙" class="headerlink" title="4、关闭防火墙"></a>4、关闭防火墙</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上systemctl disable firewalldsystemctl stop firewalld</code></pre><h3 id="5、设置SSH免密登陆"><a href="#5、设置SSH免密登陆" class="headerlink" title="5、设置SSH免密登陆"></a>5、设置SSH免密登陆</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上ssh-keygen 三下回车ssh-copy-id master01ssh-copy-id node01ssh-copy-id node02</code></pre><h3 id="6、检查DNS和NSCD"><a href="#6、检查DNS和NSCD" class="headerlink" title="6、检查DNS和NSCD"></a>6、检查DNS和NSCD</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上setenforce 0    #临时设置 重启失效</code></pre><pre class=" language-shell"><code class="language-shell">#在所有机器上vim /etc/selinux/config    #永久有效 需重启机器SELINUX=disabled</code></pre><pre class=" language-shell"><code class="language-shell">#在所有机器上umask 0022    #临时设置 重启失效echo umask 0022 >> /etc/profile    #永久有效 重启生效umask #检查当前机器的umask码</code></pre><h3 id="7、修改文件打开限制"><a href="#7、修改文件打开限制" class="headerlink" title="7、修改文件打开限制"></a>7、修改文件打开限制</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上vim /etc/security/limits.conf#在文件最后# End of file* soft nofile 65536* hard nofile 65536* soft nproc 131072* hard nproc 131072</code></pre><h3 id="8、同步时钟"><a href="#8、同步时钟" class="headerlink" title="8、同步时钟"></a>8、同步时钟</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtimeyum -y install ntp#在主服务器上vim /etc/ntp.conf#在文件中配置restrict default nomodify notrap nopeer noqueryserver 127.127.1.0fudge 127.127.1.0 stratum 10#在子节点中crontab -e0-59/10 * * * * /usr/sbin/ntpdate master01#在所有节点启动服务systemctl start ntpdsystemctl enable ntpd</code></pre><h3 id="9、安装JDK"><a href="#9、安装JDK" class="headerlink" title="9、安装JDK"></a>9、安装JDK</h3><h4 id="Ⅰ、先安装openjdk"><a href="#Ⅰ、先安装openjdk" class="headerlink" title="Ⅰ、先安装openjdk"></a>Ⅰ、<strong>先安装openjdk</strong></h4><p>​            安装openjdk解决包依赖的问题</p><pre class=" language-shell"><code class="language-shell">#在所有机器上yum -y install java</code></pre><h4 id="Ⅱ、卸载openjdk"><a href="#Ⅱ、卸载openjdk" class="headerlink" title="Ⅱ、卸载openjdk"></a>Ⅱ、卸载openjdk</h4><p>​        卸载jdk包，但是保留依赖包</p><pre class=" language-shell"><code class="language-shell">#在所有机器上rpm -qa|grep javayum remove java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64</code></pre><h4 id="Ⅲ、安装开源JDK"><a href="#Ⅲ、安装开源JDK" class="headerlink" title="Ⅲ、安装开源JDK"></a>Ⅲ、安装开源JDK</h4><pre class=" language-shell"><code class="language-shell">#在所有机器上#下载jdkwget https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64.rpm?AuthParam=1548732196_c3d078fb7f78308027532d04a26b4612#重命名mv jdk-8u201-linux-x64.rpm?AuthParam=1548732196_c3d078fb7f78308027532d04a26b4612 jdk-8u201-linux-x64.rpm#安装jdkrpm -ivh jdk-8u201-linux-x64.rpm#检查jdk版本java -versionjava version "1.8.0_201"Java(TM) SE Runtime Environment (build 1.8.0_201-b09)Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode)#修改配置文件export JAVA_HOME=/usr/java/jdk1.8.0_201-amd64export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar export PATH=$JAVA_HOME/bin:$PATH</code></pre><h3 id="10、安装MySQL"><a href="#10、安装MySQL" class="headerlink" title="10、安装MySQL"></a>10、安装MySQL</h3><p><strong>默认是PostgreSQL，但是在生产环境中不建议使用，所以安装mysql或其他，mysql安装在主节点上，如有需要可以安装在其他节点上</strong></p><h4 id="Ⅰ、卸载原来的MySQL"><a href="#Ⅰ、卸载原来的MySQL" class="headerlink" title="Ⅰ、卸载原来的MySQL"></a>Ⅰ、卸载原来的MySQL</h4><pre class=" language-shell"><code class="language-shell">rpm -qa|grep -i mysql #查看是否安装mysqlyum remove …     #卸载mysql所有内容find / -name mysql    #查找mysql所有文件位置rm -rf /var/lib/mysql…    #删除mysql相关文件rm -rf /var/log/mysql.log #删除该日志文件</code></pre><h4 id="Ⅱ、下载安装MySQL5-6"><a href="#Ⅱ、下载安装MySQL5-6" class="headerlink" title="Ⅱ、下载安装MySQL5.6"></a>Ⅱ、下载安装MySQL5.6</h4><pre class=" language-shell"><code class="language-shell">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpmrpm -ivh mysql-community-release-el7-5.noarch.rpmyum install mysql-server    #安装mysqlsystemctl start mysqld    #启动mysqlsystemctl enable mysqld    #开机启动</code></pre><h4 id="Ⅲ、修改默认密码"><a href="#Ⅲ、修改默认密码" class="headerlink" title="Ⅲ、修改默认密码"></a>Ⅲ、修改默认密码</h4><pre class=" language-shell"><code class="language-shell">mysql -u root -p (无密码)use mysqlselect host,user,password from user;delete from user where user='';update user set host='%' where user='localhost';    #(如果无user=localhost 可不执行这条命令)update user set password=PASSWORD('123456') where host='%'    #(这条命令是根据上条执行)update user set password=PASSWORD('123456') where user='root' and host='localhost';update user set password=PASSWORD('123456') where user='root' and host='master';    #(可选操作，master01为主机名)grant all privileges on *.* to 'root'@'%' identified by '123456' with grant option;    #(远程连接数据库权限设置)flush privileges;     #要刷新权限</code></pre><h2 id="三、修改yum源，实现离线安装"><a href="#三、修改yum源，实现离线安装" class="headerlink" title="三、修改yum源，实现离线安装"></a>三、修改yum源，实现离线安装</h2><h3 id="1、安装httpd"><a href="#1、安装httpd" class="headerlink" title="1、安装httpd"></a>1、安装httpd</h3><pre class=" language-shell"><code class="language-shell">#在master01上执行yum -y install httpdservice httpd restartsystemctl enable httpd</code></pre><h3 id="2、修改安装文件位置"><a href="#2、修改安装文件位置" class="headerlink" title="2、修改安装文件位置"></a>2、修改安装文件位置</h3><pre class=" language-shell"><code class="language-shell">#在master01上执行cd /var/www/html/mkdir ambari#解压文件tar -xvzf ambari-2.7.3.0-centos7.tar.gztar -xvzf HDP-3.1.0.0-centos7-rpm.tar.gztar -xvzf HDP-GPL-3.1.0.0-centos7-gpl.tar.gztar -xvzf HDP-UTILS-1.1.0.22-centos7.tar.gz#打开http://192.168.0.80/ambari 查看是否有结果</code></pre><h3 id="3、制作本地源"><a href="#3、制作本地源" class="headerlink" title="3、制作本地源"></a>3、制作本地源</h3><pre class=" language-shell"><code class="language-shell">#在master01上执行#在/var/www/html/ambari目录下创建yum源yum install yum-utils createrepo yum-plugin-priorities -ycreaterepo  ./</code></pre><pre class=" language-shell"><code class="language-shell">#在master01上执行#修改ambari安装包源配置cd /var/www/html/ambari/ambari/centos7/2.7.3.0-139vim ambari.repo#VERSION_NUMBER=2.7.3.0-139[ambari-2.7.3.0]#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.jsonname=ambari Version - ambari-2.7.3.0baseurl=http://192.168.0.80/ambari/ambari/centos7/2.7.3.0-139gpgcheck=1gpgkey=http://192.168.0.80/ambari/ambari/centos7/2.7.3.0-139/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1</code></pre><pre class=" language-shell"><code class="language-shell">#在master01上执行#修改HDP配置文件cd /var/www/html/ambari/HDP/centos7/3.1.0.0-78vim hdp.repo#VERSION_NUMBER=3.1.0.0-78[HDP-3.1.0.0]name=HDP Version - HDP-3.1.0.0baseurl=http://192.168.0.80/ambari/HDP/centos7/3.1.0.0-78gpgcheck=1gpgkey=http://192.168.0.80/ambari/HDP/centos7/3.1.0.0-78/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1[HDP-UTILS-1.1.0.22]name=HDP-UTILS Version - HDP-UTILS-1.1.0.22baseurl=http://192.168.0.80/ambari/HDP-UTILS/centos7/1.1.0.22gpgcheck=1gpgkey=http://192.168.0.80/ambari/HDP-UTILS/centos7/1.1.0.22/RPM-GPG-KEY/RPM-GPG-KEY-Jenkinsenabled=1priority=1</code></pre><h3 id="4、将repo文件辅助到YUM库"><a href="#4、将repo文件辅助到YUM库" class="headerlink" title="4、将repo文件辅助到YUM库"></a>4、将repo文件辅助到YUM库</h3><pre class=" language-shell"><code class="language-shell">#在master01上执行cp /var/www/html/ambari/ambari/centos7/2.7.3.0-139/ambari.repo /etc/yum.repos.d/cp /var/www/html/ambari/HDP/centos7/3.1.0.0-78/hdp.repo /etc/yum.repos.d/</code></pre><h3 id="5、将文件拷贝到子节点"><a href="#5、将文件拷贝到子节点" class="headerlink" title="5、将文件拷贝到子节点"></a>5、将文件拷贝到子节点</h3><pre class=" language-shell"><code class="language-shell">#在master01上执行scp /etc/yum.repos.d/ambari.repo node01:/etc/yum.repos.d/scp /etc/yum.repos.d/ambari.repo node02:/etc/yum.repos.d/scp /etc/yum.repos.d/hdp.repo node01:/etc/yum.repos.d/scp /etc/yum.repos.d/hdp.repo node02:/etc/yum.repos.d/</code></pre><h3 id="6、重新设置YUM缓存"><a href="#6、重新设置YUM缓存" class="headerlink" title="6、重新设置YUM缓存"></a>6、重新设置YUM缓存</h3><pre class=" language-shell"><code class="language-shell">#在所有机器上执行yum clean allyum makecache</code></pre><h2 id="四、安装ambari-server"><a href="#四、安装ambari-server" class="headerlink" title="四、安装ambari-server"></a>四、安装ambari-server</h2><h3 id="1、在MySQL中创建用户和数据库"><a href="#1、在MySQL中创建用户和数据库" class="headerlink" title="1、在MySQL中创建用户和数据库"></a>1、在MySQL中创建用户和数据库</h3><pre class=" language-shell"><code class="language-shell">#根据安装软件需要自己选择要创建的数据库和用户CREATE DATABASE ambari;  use ambari;  CREATE USER 'ambari'@'%' IDENTIFIED BY '123456';  GRANT ALL PRIVILEGES ON *.* TO 'ambari'@'%';  CREATE USER 'ambari'@'localhost' IDENTIFIED BY '123456';  GRANT ALL PRIVILEGES ON *.* TO 'ambari'@'localhost';  CREATE USER 'ambari'@'master01' IDENTIFIED BY '123456';  GRANT ALL PRIVILEGES ON *.* TO 'ambari'@'master01';  FLUSH PRIVILEGES;  CREATE DATABASE hive;  use hive;  CREATE USER 'hive'@'%' IDENTIFIED BY 'hive';  GRANT ALL PRIVILEGES ON *.* TO 'hive'@'%';  CREATE USER 'hive'@'localhost' IDENTIFIED BY 'hive';  GRANT ALL PRIVILEGES ON *.* TO 'hive'@'localhost';  CREATE USER 'hive'@'master01' IDENTIFIED BY 'hive';  GRANT ALL PRIVILEGES ON *.* TO 'hive'@'master01';  FLUSH PRIVILEGES;  CREATE DATABASE oozie;  use oozie;  CREATE USER 'oozie'@'%' IDENTIFIED BY 'oozie';  GRANT ALL PRIVILEGES ON *.* TO 'oozie'@'%';  CREATE USER 'oozie'@'localhost' IDENTIFIED BY 'oozie';  GRANT ALL PRIVILEGES ON *.* TO 'oozie'@'localhost';  CREATE USER 'oozie'@'master01' IDENTIFIED BY 'oozie';  GRANT ALL PRIVILEGES ON *.* TO 'oozie'@'master01';  FLUSH PRIVILEGES;  </code></pre><h3 id="2、将jar包放入环境"><a href="#2、将jar包放入环境" class="headerlink" title="2、将jar包放入环境"></a>2、将jar包放入环境</h3><pre class=" language-shell"><code class="language-shell">#下载mysql-connector-java-5.1.47.tar.gzcd /datawget https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-5.1.47.tar.gztar -xvzf mysql-connector-java-5.1.47.tar.gzcp /data/mysql-connector-java-5.1.47/mysql-connector-java-5.1.47* /usr/share/java/cd /usr/share/java/mv mysql-connector-java-5.1.47.jar mysql-connector-java.jarcp /usr/share/java/mysql-connector-java.jar /var/lib/ambari-server/resources/mysql-jdbc-driver.jar</code></pre><h3 id="3、初始化ambari-server并启动"><a href="#3、初始化ambari-server并启动" class="headerlink" title="3、初始化ambari-server并启动"></a>3、初始化ambari-server并启动</h3><pre class=" language-shell"><code class="language-shell">#初始化ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar#配置ambariambari-server setup#所有选项选择y即可，当遇到如下选项时#配置JDK环境Checking JDK...Do you want to change Oracle JDK [y/n] (n)? y[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7[3] Custom JDK==============================================================================Enter choice (1): 3如果上面选择3自定义JDK,则需要设置JAVA_HOME。输入：/usr/java/jdk1.8.0_201-amd64#配置数据库Configuring database...Enter advanced database configuration [y/n] (n)? yConfiguring database...==============================================================================Choose one of the following options:[1] - PostgreSQL (Embedded)[2] - Oracle[3] - MySQL[4] - PostgreSQL[5] - Microsoft SQL Server (Tech Preview)[6] - SQL Anywhere==============================================================================Enter choice (3): 3#设置数据库的具体配置信息，根据实际情况输入，如果和括号内相同，则可以直接回车。如果想重命名，就输入。Hostname (localhost):Port (3306):Database name (ambari):Username (ambari):Enter Database Password (bigdata):    123456    #创建用户时设置的密码Re-Enter password: 123456</code></pre><p>检查mysql中是否有新建的表</p><pre class=" language-shell"><code class="language-shell">mysql -u root -p 123456use ambari;show tables;#如果表为空的话cd /var/lib/ambari-server/resources    #sql脚本位置myslq -u ambari -p 123456use ambari;source Ambari-DDL-MySQL-CREATE.sql;</code></pre><h3 id="4、错误处理"><a href="#4、错误处理" class="headerlink" title="4、错误处理"></a>4、错误处理</h3><p>如果出现错误，查看server日志，根据报错进行修改</p><pre class=" language-shell"><code class="language-shell">cat var/log/ambari-server/ambari-server.log</code></pre><p>也可以删除数据库重新配置</p><pre class=" language-shell"><code class="language-shell">ambari-server stopmysql -u root -p 123456drop database ambari;drop database hive;drop database oozie;#重新创建数据库</code></pre><h3 id="5、清除已经安装的包"><a href="#5、清除已经安装的包" class="headerlink" title="5、清除已经安装的包"></a>5、清除已经安装的包</h3><pre class=" language-shell"><code class="language-shell">#在ambari-server启动的状态下执行命令，清除已经安装的软件包python /usr/lib/python2.6/site-packages/ambari_agent/HostCleanup.py --silent</code></pre><h3 id="6、安装向导本地源库地址"><a href="#6、安装向导本地源库地址" class="headerlink" title="6、安装向导本地源库地址"></a>6、安装向导本地源库地址</h3><pre class=" language-shell"><code class="language-shell">#HDPhttp://192.168.0.80/ambari/HDP/centos7/3.1.0.0-78/#HDP-UTILShttp://192.168.0.80/ambari/HDP-UTILS/centos7/1.1.0.22/#HDP-GPLhttp://192.168.0.80/ambari/HDP-GPL/centos7/3.1.0.0-78/</code></pre>]]></content>
      
      
      <categories>
          
          <category> HDP安装配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDP </tag>
            
            <tag> BigData </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
